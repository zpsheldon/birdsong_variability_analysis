function [mu,sigma,p,L,iter,n_fail] = robgaussmix_spc(X,k,initN)

if nargin < 3
    initN = 30;
end

[n,d] = size(X);

S = cov(X);
% Smat = repmat(chol(S),[1,1,k]);
Smat = repmat(S,[1,1,k]);
muX = mean(X);
muXmat = repmat(muX,[k,1]);
stdX = std(X);
stdXmat = repmat(stdX,[k,1]);

i = 0;
n_fail = 0;

h = waitbar(0/initN,'Calculating parameters');
Lprev = -inf;

itot = 0;

v0tmp = 10*ones(d,1);

while i < initN & itot < 5*initN
 
    mu0tmp = stdXmat .* (rand(k,d)-.5);
    sigma0tmp = Smat;
    
    p0tmp = rand(1,k);
    p0tmp = p0tmp / sum(p0tmp);
    
    [mutmp,sigmatmp,ptmp,Ltmp,itertmp] = robgaussmix(X,k,mu0tmp,sigma0tmp,p0tmp,v0tmp);
    
    itot = itot+1;
    
    if itertmp < 1000
        
        i = i + 1;
        h = waitbar(i/initN,h,'Calculating parameters');
        
        if L > Lprev
            mu = mutmp;
            sigma = sigmatmp;
            p = ptmp;
            L = Ltmp;
            iter = itertmp;
            s = stmp;
        end
        
        Lprev = logptmp;
        
    else
        n_fail = n_fail + 1
    end
    
end

if i == 0
    logp = -inf;
    mu = [];
    sigma = [];
    p = [];
    iter = 0;
    gamma = [];
end

close(h)